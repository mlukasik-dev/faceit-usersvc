version: "3"
services:
  mongo-setup:
    container_name: mongo-setup
    image: mongo
    restart: on-failure
    networks:
      default:
    volumes:
      - ./scripts:/scripts
    entrypoint: ["/scripts/setup.sh"]
    depends_on:
      - mongo1
      - mongo2
      - mongo3

  mongo1:
    hostname: mongo1
    container_name: localmongo1
    image: mongo
    expose:
      - 27017
    restart: always
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

  mongo2:
    hostname: mongo2
    container_name: localmongo2
    image: mongo
    expose:
      - 27017
    restart: always
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

  mongo3:
    hostname: mongo3
    container_name: localmongo3
    image: mongo
    expose:
      - 27017
    restart: always
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

  server:
    container_name: server
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      MONGODB_URI: mongodb://mongo1:27017,mongo2:27017,mongo3:27017/usersvcdb?replicaSet=rs0
    ports:
      - 8080:8080
    depends_on:
      - mongo-setup

  # it may restart a few times until replicas are fully available.
  dashboard:
    container_name: mongo-express
    restart: always
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo1,mongo2,mongo3
    ports:
      - 8081:8081
    depends_on:
      - mongo-setup
